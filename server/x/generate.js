const fs = require("fs");
const path = require("path");
const PizZip = require("pizzip");
const Docxtemplater = require("docxtemplater");

// https://docxtemplater.com/docs/goals/

// üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
const content = fs.readFileSync(path.resolve(__dirname, "template.docx"), "binary");
const zip = new PizZip(content);

// ‚öôÔ∏è –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä–∞
const doc = new Docxtemplater(zip, {
    paragraphLoop: true,
    linebreaks: true,
});

// üéØ –î–∞–Ω–Ω—ã–µ
const data = {
    birthDay: "2024-08-15", // –∏–ª–∏ null / undefined –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã
    // birthDay: null,
};

// –ï—Å–ª–∏ –¥–∞—Ç—ã –Ω–µ—Ç ‚Äî —É–¥–∞–ª–∏–º –ø–æ–ª–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞
if (!data.birthDay) {
    delete data.birthDay;
}

// üîÅ –†–µ–Ω–¥–µ—Ä–∏–º
doc.setData(data);

try {
    doc.render();
} catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ:", error);
}

// üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª
const buf = doc.getZip().generate({ type: "nodebuffer" });
fs.writeFileSync(path.resolve(__dirname, "output.docx"), buf);

console.log("üìÑ –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: output.docx");
